@page "/Empleados"
@using System.Net.Http
@using System.Net.Http.Json
@using BlazorCRUDEmpleados.Data
@inject HttpClient Http
@inject IJSRuntime JS
@inject NavigationManager NavigationManager
<h3>Listado de Empleados</h3>
<div class="container mt-3">
    <a href="EmpleadoForm" class="btn btn-primary">Agregar Empleado</a>
    <br />
    <br />
    <table class="table table-dark table-hover">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Apellido</th>
                <th>DPI</th>
                <th>Direccion</th>
                <th>Telefono</th>
                <th>Puesto</th>
                <th>Fecha Nacimiento</th>
                <th>Fecha Ingreso Registro</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
    @if(oRespuesta==null){
        <tbody>
            <td>No hay Data</td>
            </tbody>
    }else{
        @foreach (var Empleado in oRespuesta)
        {
            <tr>
                <td>@Empleado.Nombre</td>
                <td>@Empleado.Apellido</td>
                <td>@Empleado.Dpi</td>
                <td>@Empleado.Direccion</td>
                <td>@Empleado.Telefono</td>
                <td>@Empleado.Puesto</td>
                <td>@Empleado.FechaNacimiento</td>
                <td>@Empleado.FechaIngresoRegistro</td>
                <td>
                        <a class="btn btn-success" href="EmpleadoForm/@Empleado.IdEmpleados">Modificar</a>
                        <button class="btn btn-danger" type="button" @onclick="@(()=>Borrar(Empleado.IdEmpleados))">Eliminar</button>

                </td>
            </tr>
        }
    }
        </tbody>
</table>
</div>
@code {

    public string Url = "/api/Empleados";
    public List<EmpleadosViewModel> oRespuesta = new List<EmpleadosViewModel>();
    protected override async Task OnInitializedAsync() => oRespuesta = await Http.GetFromJsonAsync<List<EmpleadosViewModel>>(Url);
    async Task Borrar(int IdEmpleado)
    {
        var empleadoSeleccionado = await Http.GetFromJsonAsync<Empleado>($"{Url}/{IdEmpleado}");
        string mensajeConfirmacion = $"¿Deseas borrar a la persona {empleadoSeleccionado.Nombre}?";
        if (await JS.InvokeAsync<bool>("confirm", mensajeConfirmacion))
        {
            await Http.DeleteAsync($"{Url}/{IdEmpleado}");
            oRespuesta = await Http.GetFromJsonAsync<List<EmpleadosViewModel>>(Url);
        }
        
    }
}
